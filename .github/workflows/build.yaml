name: Build
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - linux-amd64
          - linux-386
          - darwin-amd64
          - darwin-arm64
          - windows-amd64
          - linux-arm
          - linux-arm64
          - linux-ppc64le
          - linux-s390x
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.17.8"
      - env:
          TARGET: ${{ matrix.target }}
        run: |
          echo "${TARGET}"
          case "${TARGET}" in
            linux-amd64)
              GOARCH=amd64 PASSES='build' ./scripts/test.sh
              ;;
            linux-386)
              GOARCH=386 PASSES='build' ./scripts/test.sh
              ;;
            darwin-amd64)
              GOARCH=amd64 GOOS=darwin GO_BUILD_FLAGS='-v -mod=readonly' ./scripts/build.sh
              ;;
            darwin-arm64)
              GOARCH=arm64 GOOS=darwin GO_BUILD_FLAGS='-v -mod=readonly' ./scripts/build.sh
              ;;
            windows-amd64)
              GOARCH=amd64 GOOS=windows GO_BUILD_FLAGS='-v -mod=readonly' ./scripts/build.sh
              ;;
            linux-arm)
              GOARCH=arm GO_BUILD_FLAGS='-v -mod=readonly' ./scripts/build.sh
              ;;
            linux-arm64)
              GOARCH=arm64 GO_BUILD_FLAGS='-v -mod=readonly' ./scripts/build.sh
              ;;
            linux-ppc64le)
              GOARCH=ppc64le GO_BUILD_FLAGS='-v -mod=readonly' ./scripts/build.sh
              ;;
            linux-s390x)
              GOARCH=s390x GO_BUILD_FLAGS='-v -mod=readonly' ./scripts/build.sh
              ;;
            *)
              echo "Failed to find target"
              exit 1
              ;;
          esac

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        go: ["1.17.8"]
    env:
      GIT_ORG: ${{ github.repository_owner }}
      GIT_REPO: ${{ github.events.repository.name }}
      GO_VERSION: ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    steps:
    # This step is required as long as the symlinks for client/v3/*_test.go -> tests/integration/clientv3/examples/*_test.go exist
      - name: core.symlinks
        run: |
          git config --global core.symlinks true
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1      
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Continuous Integration
        run: powershell -ExecutionPolicy Bypass make.ps1 -Script ci # -Version ${{ github.ref }}
